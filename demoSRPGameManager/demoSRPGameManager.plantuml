@startuml

title __DEMOSRPGAMEMANAGER's Class Diagram__\n


    namespace om.example.srp.demosrpgamemanager {
      namespace manager.action {
        class com.example.srp.demosrpgamemanager.manager.action.FireManager {
            + fire()
        }
      }
    }




    namespace om.example.srp.demosrpgamemanager {
      namespace manager.action {
        class com.example.srp.demosrpgamemanager.manager.action.MoveManager {
            + move()
        }
      }
    }




    namespace om.example.srp.demosrpgamemanager {
      namespace manager.action {
        class com.example.srp.demosrpgamemanager.manager.action.RestManager {
            + rest()
        }
      }
    }



    namespace om.example.srp.demosrpgamemanager {
      namespace manager.player {
        class com.example.srp.demosrpgamemanager.manager.player.NameManager {
            + getName()
        }
      }
    }




    namespace om.example.srp.demosrpgamemanager {
      namespace manager.player {
        class com.example.srp.demosrpgamemanager.manager.player.ScoreManager {
            + getHighScore()
        }
      }
    }


    namespace om.example.srp.demosrpgamemanager {
      namespace manager.session {
        class com.example.srp.demosrpgamemanager.manager.session.LoginManager {
            + login()
        }
      }
    }




    namespace om.example.srp.demosrpgamemanager {
      namespace manager.session {
        class com.example.srp.demosrpgamemanager.manager.session.SignUpManager {
            + signUp()
        }
      }
    }





    namespace om.example.srp.demosrpgamemanager {
      namespace model {
        class com.example.srp.demosrpgamemanager.model.ActionPlayer {
            - action : String
            + ActionPlayer()
            + ActionPlayer()
            + equals()
            + getAction()
            + hashCode()
            + setAction()
            + toString()
            # canEqual()
        }
      }
    }




    namespace om.example.srp.demosrpgamemanager {
      namespace model {
        class com.example.srp.demosrpgamemanager.model.Player {
            - highScore : long
            - id : String
            - name : String
            + Player()
            + Player()
            + equals()
            + getActionPlayer()
            + getHighScore()
            + getId()
            + getName()
            + getSessionPlayer()
            + hashCode()
            + setActionPlayer()
            + setHighScore()
            + setId()
            + setName()
            + setSessionPlayer()
            + toString()
            # canEqual()
        }
      }
    }







    namespace om.example.srp.demosrpgamemanager {
      namespace model {
        class com.example.srp.demosrpgamemanager.model.SessionPlayer {
            - sessionId : String
            + SessionPlayer()
            + SessionPlayer()
            + equals()
            + getSessionId()
            + hashCode()
            + setSessionId()
            + toString()
            # canEqual()
        }
      }
    }



  com.example.srp.demosrpgamemanager.model.Player o-- com.example.srp.demosrpgamemanager.model.ActionPlayer : actionPlayer
  com.example.srp.demosrpgamemanager.model.Player o-- com.example.srp.demosrpgamemanager.model.SessionPlayer : sessionPlayer

    namespace om.example.srp.demosrpgamemanager {
      namespace resource {
        class com.example.srp.demosrpgamemanager.resource.ActionRequest {
            + ActionRequest()
            + ActionRequest()
            + equals()
            + getPlayer()
            + hashCode()
            + setPlayer()
            + toString()
            # canEqual()
        }
      }
    }









    namespace om.example.srp.demosrpgamemanager {
      namespace resource {
        class com.example.srp.demosrpgamemanager.resource.ActionResponse {
            + ActionResponse()
            + equals()
            + getPlayer()
            + hashCode()
            + setPlayer()
            + toString()
            # canEqual()
        }
      }
    }




    namespace om.example.srp.demosrpgamemanager {
      namespace resource {
        class com.example.srp.demosrpgamemanager.resource.PlayerRequest {
            + PlayerRequest()
            + PlayerRequest()
            + equals()
            + getPlayer()
            + hashCode()
            + setPlayer()
            + toString()
            # canEqual()
        }
      }
    }








    namespace om.example.srp.demosrpgamemanager {
      namespace resource {
        class com.example.srp.demosrpgamemanager.resource.PlayerResponse {
            - highScore : long
            - name : String
            + PlayerResponse()
            + equals()
            + getHighScore()
            + getName()
            + hashCode()
            + setHighScore()
            + setName()
            + toString()
            # canEqual()
        }
      }
    }









    namespace om.example.srp.demosrpgamemanager {
      namespace resource {
        class com.example.srp.demosrpgamemanager.resource.SessionRequest {
            + SessionRequest()
            + SessionRequest()
            + equals()
            + getPlayer()
            + hashCode()
            + setPlayer()
            + toString()
            # canEqual()
        }
      }
    }







    namespace om.example.srp.demosrpgamemanager {
      namespace resource {
        class com.example.srp.demosrpgamemanager.resource.SessionResponse {
            + SessionResponse()
            + equals()
            + getPlayer()
            + hashCode()
            + setPlayer()
            + toString()
            # canEqual()
        }
      }
    }



  com.example.srp.demosrpgamemanager.resource.ActionRequest o-- com.example.srp.demosrpgamemanager.model.Player : player
  com.example.srp.demosrpgamemanager.resource.ActionResponse o-- com.example.srp.demosrpgamemanager.model.Player : player
  com.example.srp.demosrpgamemanager.resource.PlayerRequest o-- com.example.srp.demosrpgamemanager.model.Player : player
  com.example.srp.demosrpgamemanager.resource.SessionRequest o-- com.example.srp.demosrpgamemanager.model.Player : player
  com.example.srp.demosrpgamemanager.resource.SessionResponse o-- com.example.srp.demosrpgamemanager.model.Player : player


    namespace om.example.srp.demosrpgamemanager {
      namespace webservice {
        class com.example.srp.demosrpgamemanager.webservice.GameSessionController {
            + login()
            + signUp()
        }
      }
    }




    namespace om.example.srp.demosrpgamemanager {
      namespace webservice {
        class com.example.srp.demosrpgamemanager.webservice.PlayerActionController {
            + fire()
            + move()
            + rest()
        }
      }
    }




    namespace om.example.srp.demosrpgamemanager {
      namespace webservice {
        class com.example.srp.demosrpgamemanager.webservice.PlayerController {
            + getHighScore()
            + getName()
        }
      }
    }



  com.example.srp.demosrpgamemanager.webservice.GameSessionController o-- com.example.srp.demosrpgamemanager.manager.session.LoginManager : loginManager
  com.example.srp.demosrpgamemanager.webservice.GameSessionController o-- com.example.srp.demosrpgamemanager.manager.session.SignUpManager : signUpManager
  com.example.srp.demosrpgamemanager.webservice.PlayerActionController o-- com.example.srp.demosrpgamemanager.manager.action.FireManager : fireManager
  com.example.srp.demosrpgamemanager.webservice.PlayerActionController o-- com.example.srp.demosrpgamemanager.manager.action.MoveManager : moveManager
  com.example.srp.demosrpgamemanager.webservice.PlayerActionController o-- com.example.srp.demosrpgamemanager.manager.action.RestManager : restManager
  com.example.srp.demosrpgamemanager.webservice.PlayerController o-- com.example.srp.demosrpgamemanager.manager.player.NameManager : nameManager
  com.example.srp.demosrpgamemanager.webservice.PlayerController o-- com.example.srp.demosrpgamemanager.manager.player.ScoreManager : scoreManager

right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
